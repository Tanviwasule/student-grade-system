# -*- coding: utf-8 -*-
"""ML-studygradesystem.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v2L7Ah5dEyYsyQwzzFMhU0_lim-ZsD9W
"""

pip install numpy scikit-learn

import numpy as np
from sklearn.linear_model import LinearRegression

hours_of_study = np.array([2, 4, 1, 3, 5, 2.5, 1.5, 4.5, 3.5, 6])
grades = np.array([80, 90, 70, 85, 95, 82, 75, 92, 88, 98])

X = hours_of_study.reshape(-1, 1)
y = grades.reshape(-1, 1)

class LinearRegressionModule:
    def __init__(self):
        self.model = LinearRegression()

def fit(self, X, y):
        self.model.fit(X, y)

def predict(self, X):
        return self.model.predict(X)

def score(self, X, y):
        return self.model.score(X, y)

class LinearRegressionModule:
    def __init__(self):
        self.model = LinearRegression()

    def fit(self, X, y):
        self.model.fit(X, y)

    def predict(self, X):
        return self.model.predict(X)

    def score(self, X, y):
        return self.model.score(X, y)

model = LinearRegressionModule()

model.fit(X, y)

new_hours_of_study = np.array([4.2, 3.8, 2.1])
new_grades = model.predict(new_hours_of_study.reshape(-1, 1))
print(new_grades)

r2 = model.score(X, y)
print("R^2 score:", r2)

import matplotlib.pyplot as plt

plt.scatter(hours_of_study, grades)
plt.xlabel("Hours of Study")
plt.ylabel("Grade")
plt.title("Linear Regression Model")
plt.show()